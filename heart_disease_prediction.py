# -*- coding: utf-8 -*-
"""Copy of HEART_DISEASE_PREDICTION

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1907Bt4agbZx4d74eBdlzLOfl17NZs08O
"""

import pandas as pd,numpy as np, seaborn as sn, matplotlib.pyplot as plt

from google.colab import files
uploaded=files.upload()

myfiles="heart.csv"

data=pd.read_csv(myfiles)

data.shape

data['target'].value_counts()

data.info()

data.isnull().sum()

from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

data.columns

sn.lmplot(x="age",y="chol",data=data)

X=data.drop('target',axis=1)
y=data['target']

knn=KNeighborsClassifier()

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=26)

k_values = range(1, 21)
accuracies = []

for k in k_values:
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(X_train, y_train)
    y_pred = knn.predict(X_test)
    accuracy = accuracy_score(y_test, y_pred)
    accuracies.append(accuracy)

plt.plot(k_values, accuracies)
plt.xlabel('k')
plt.ylabel('Accuracy')
plt.title('KNN: Accuracy vs. k')
plt.show()

knn=KNeighborsClassifier(n_neighbors=3)



knn.fit(X_train, y_train)

y_pred = knn.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy * 100:.2f}%")

from sklearn.metrics import classification_report , confusion_matrix , f1_score,precision_score,recall_score

fscore=f1_score(y_test ,y_pred)

cm=confusion_matrix(y_test,y_pred)

ps=precision_score(y_test,y_pred)

rs=recall_score(y_test,y_pred)

fscore

cm

ps

rs



from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

clf = RandomForestClassifier(n_estimators=100, random_state=42)

clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

print(f'Accuracy: {accuracy:.2f}')

recall = recall_score(y_test,y_pred)

recall

